language: cpp
sudo: false
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    - boost-latest
    - llvm-toolchain-precise
    - george-edison55-precise-backports
    packages:
    - libgmp-dev
    - libmpfr-dev
    - libboost1.55-all-dev
    - libboost-serialization1.55-dev
    - libboost-system1.55-dev
    - libboost-chrono1.55-dev
    - libboost-timer1.55-dev
    # This includes both Boost.Python 2 and 3.
    - libboost-python1.55-dev
    - python3-dev
    - python-numpy
    - python3-numpy
    - python-pip
    - g++-4.8
    - clang-3.8
    - doxygen
    - graphviz
    - graphviz-dev
    - cmake
    - cmake-data
    - texlive

env:
  global:
    - secure: "Wv5gHHcF9AKEboPhLPbXEjAJKe/YRT3bpQChPHBmlv4mylCJNAh/satTVmumZItVeNRV/V9mk3ckDGWt6g4X7o9Md/MB1+UmGUCb9AakI288llc90puYWDnSGjgSpTVhB8PfrJa45u9jBLqgPO/S6G5zhPUC4Cru40j7hvUpThaVIiRwj2KlzUwjz/m9YTcxTmBFD+wNr8b6ViNP7BiH6G+RP+fcmd9w9D2pLzCpuBtUpQfZhn+Ar07Nt36weDgpGSzPcpKAJC99Tfi+Bu/NauSYKKdDtbRpBC9z3QRZrNFn5nJ/VFJNWsqpAlCZhHHbO2Ph3YK5SKn/ya37KtrGNYaRIy1QTL6chXeMmluemalIRoF+pkjKv2sQ/Pj8mUx9pbpboHyJivqvM3HpnetJEI6rz+FX14GmpHJn1gNhaHEm0DyubafqE6tfUjo+5mDOK0hoP/dHAEoXkCysL+8tQUWMP0qztjFZrcLhTIoGDH2x04KeqOoZdkRnzIp9tSDIZNFgm0Q/B/4c2r7Wv/N7t6z+LQKFsz9YORMMnADTEI+DjgZIVtjOf0I39T7pjlTZIKDL98bmIs5CKVlj1bNdyMf/97tDi3Xqc9NKrdp404Os3tqBaqMSXAT9VmrTHXPqt809g14m1wlt7zf5BhTMm+WhYP68iqjVXV9hIGBxzj0="

matrix:
  include:
    #- compiler: gcc
      #env: BUILD_TYPE="Release"
    #- compiler: gcc
      #env: BUILD_TYPE="Debug" SPLIT_TEST_NUM="0"
    #- compiler: gcc
      #env: BUILD_TYPE="Debug" SPLIT_TEST_NUM="1"
    #- compiler: gcc
      #env: BUILD_TYPE="Debug" SPLIT_TEST_NUM="2"
    #- compiler: clang
      #env: BUILD_TYPE="Release"
    - compiler: clang
      env: BUILD_TYPE="Debug" SPLIT_TEST_NUM="0"
    #- compiler: clang
      #env: BUILD_TYPE="Debug" SPLIT_TEST_NUM="1"
    #- compiler: clang
      #env: BUILD_TYPE="Debug" SPLIT_TEST_NUM="2"
    #- compiler: clang
      #env: BUILD_TYPE="Python2"
    #- compiler: clang
      #env: BUILD_TYPE="Python3"
    #- compiler: clang
      #env: BUILD_TYPE="Tutorial"
    #- compiler: gcc
      #env: BUILD_TYPE="Doxygen"

install:
    - if [[ "${CC}" == "gcc" ]]; then
          export PIRANHA_COMPILER=gcc;
          export CC=gcc-4.8;
          export CXX=g++-4.8;
      elif [[ "${CC}" == "clang" ]]; then
          export PIRANHA_COMPILER=clang;
          export CC=clang-3.8;
          export CXX=clang++-3.8;
      fi
    # - export BOOST_TEST_LOG_LEVEL="all"
script:
    - mkdir build
    - cd build
    - source ../tools/install_travis.sh
after_success:
    - if [[ "${BUILD_TYPE}" == "Debug" && "${PIRANHA_COMPILER}" == "clang" ]]; then
          pip install --user cpp-coveralls;
          cd tests;
          coveralls --gcov llvm-cov --gcov-options gcov || echo 'Coveralls upload failed.';
      fi
notifications:
  email: false

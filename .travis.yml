language: cpp
sudo: false
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    - boost-latest
    - llvm-toolchain-precise
    packages:
    - libgmp-dev
    - libmpfr-dev
    - libboost1.55-all-dev
    - libboost-serialization1.55-dev
    - libboost-system1.55-dev
    - libboost-chrono1.55-dev
    - libboost-timer1.55-dev
    - libboost-python1.55-dev
    - g++-4.8
    - clang-3.8

matrix:
  include:
    #- compiler: gcc
      #env: BUILD_TYPE="Release"
    #- compiler: gcc
      #env: BUILD_TYPE="Debug" SPLIT_TEST_NUM="0"
    #- compiler: gcc
      #env: BUILD_TYPE="Debug" SPLIT_TEST_NUM="1"
    #- compiler: gcc
      #env: BUILD_TYPE="Debug" SPLIT_TEST_NUM="2"
    #- compiler: clang
      #env: BUILD_TYPE="Release"
    #- compiler: clang
      #env: BUILD_TYPE="Debug" SPLIT_TEST_NUM="0"
    #- compiler: clang
      #env: BUILD_TYPE="Debug" SPLIT_TEST_NUM="1"
    #- compiler: clang
      #env: BUILD_TYPE="Debug" SPLIT_TEST_NUM="2"
    - compiler: clang
      env: BUILD_TYPE="Python"

install:
    - if [[ "${CC}" == "gcc" ]]; then
          export CC=gcc-4.8;
          export CXX=g++-4.8;
      elif [[ "${CC}" == "clang" ]]; then
          export CC=clang-3.8;
          export CXX=clang++-3.8;
      fi
    # - export BOOST_TEST_LOG_LEVEL="all"
script:
    - mkdir build
    - cd build
    - if [[ "${BUILD_TYPE}" == "Debug" ]]; then
          cmake -DCMAKE_BUILD_TYPE=Debug -DPIRANHA_TEST_SPLIT=yes -DPIRANHA_TEST_SPLIT_NUM=${SPLIT_TEST_NUM} ../;
      elif [[ "${BUILD_TYPE}" == "Release" ]]; then
          cmake -DCMAKE_BUILD_TYPE=Release ../;
      elif [[ "${BUILD_TYPE}" == "Python" ]]; then
          cmake -DCMAKE_BUILD_TYPE=Debug -DBUILD_PYRANHA=yes -DBUILD_TESTS=no -DCMAKE_CXX_FLAGS_DEBUG=-g0 -DCMAKE_CXX_FLAGS=-Os -DCMAKE_INSTALL_PREFIX=/home/travis/.local ../;
          make install;
      fi
    - make
    - if [[ "${BUILD_TYPE}" == "Debug" ]]; then
          ctest -E "thread" -V;
      elif [[ "${BUILD_TYPE}" == "Release" ]]; then
          ctest -E "gastineau|perminov" -V;
      elif [[ "${BUILD_TYPE}" == "Python" ]]; then
          python -c "import pyranha; pyranha.test.run_test_suite()";
      fi
notifications:
  email: false
